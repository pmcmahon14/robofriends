{"map":"{\"version\":3,\"sources\":[\"C:\\\\MAMP\\\\htdocs\\\\React\\\\robofriend\\\\src\\\\components\\\\SearchBox.js\",\"C:\\\\MAMP\\\\htdocs\\\\React\\\\robofriend\\\\src\\\\components\\\\Scroll.js\",\"C:\\\\MAMP\\\\htdocs\\\\React\\\\robofriend\\\\src\\\\components\\\\Card.js\",\"C:\\\\MAMP\\\\htdocs\\\\React\\\\robofriend\\\\src\\\\components\\\\CardList.js\",\"C:\\\\MAMP\\\\htdocs\\\\React\\\\robofriend\\\\src\\\\containers\\\\App.js\",\"C:\\\\MAMP\\\\htdocs\\\\React\\\\robofriend\\\\src\\\\serviceWorker.js\",\"C:\\\\MAMP\\\\htdocs\\\\React\\\\robofriend\\\\src\\\\index.js\"],\"names\":[\"SearchBox\",\"_ref\",\"searchfield\",\"searchChange\",\"react_default\",\"a\",\"createElement\",\"className\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"Card\",\"name\",\"email\",\"id\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"filteredRobots\",\"filter\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"href\",\"origin\",\"addEventListener\",\"contentType\",\"headers\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"yNAeeA,EAbG,SAAAC,GAAiCA,EAA/BC,YAA+B,IAAlBC,EAAkBF,EAAlBE,aAC7B,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,QAAA,CACIC,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUP,MCCPQ,EARA,SAACC,GACZ,OACIR,EAAAC,EAAAC,cAAA,MAAA,CAAKO,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCSJC,EAZF,SAAAjB,GAAyB,IAAtBkB,EAAsBlB,EAAtBkB,KAAMC,EAAgBnB,EAAhBmB,MAAOC,EAASpB,EAAToB,GACzB,OACIjB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKgB,IAAI,SAASC,IAAG,wBAAAC,OAA0BH,EAA1B,mBACrBjB,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAKa,GACLf,EAAAC,EAAAC,cAAA,IAAA,KAAIc,MCcLK,EAnBE,SAAAxB,GAAc,IAAZyB,EAAYzB,EAAZyB,OACf,OACItB,EAAAC,EAAAC,cAAA,MAAA,KAEQoB,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIzB,EAAAC,EAAAC,cAACwB,EAAD,CACIC,IAAKF,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,UARrC,MC0COY,qBAvCX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcJI,eAAiB,SAACC,GACdR,EAAKS,SAAS,CAACxC,YAAauC,EAAME,OAAOC,SAdzCX,EAAKY,MAAQ,CAETnB,OAAQ,GACRxB,YAAa,IALP+B,mFASM,IAAAa,EAAAV,KAChBW,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAGA,EAASC,SACzBF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAChB,OAAQyB,uCAOrC,IAAAC,EAC0BhB,KAAKS,MAA5BnB,EADH0B,EACG1B,OAAQxB,EADXkD,EACWlD,YACVmD,EAAiB3B,EAAO4B,OAAO,SAAA5B,GACjC,OAAOA,EAAOP,KAAKoC,cAAcC,SAAStD,EAAYqD,iBAE1D,OAAQ7B,EAAO+B,OAGPrD,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWvD,aAAciC,KAAKI,iBAC9BpC,EAAAC,EAAAC,cAACqD,EAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUlC,OAAQ2B,MAN9BjD,EAAAC,EAAAC,cAAA,KAAA,KAAA,kBA1BMuD,EAAAA,YCKZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTrB,KAAK,SAAA0B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/B,QACf0B,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,gHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,WCzFjEC,EAAAA,EAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAAQC,SAASC,eAAe,SDezC,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB5B,OAAOC,SAAS4B,MACpDC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,OAAQ,WAC9B,IAAM1B,EAAK,GAAA7C,OAAMoE,GAAN,sBAEP9B,GAgEV,SAAiCO,EAAOC,GAEtCvB,MAAMsB,GACHrB,KAAK,SAAAC,GAEJ,IAAM+C,EAAc/C,EAASgD,QAAQC,IAAI,gBAEnB,MAApBjD,EAASkD,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAMrD,KAAK,SAAA0B,GACjCA,EAAa4B,aAAatD,KAAK,WAC7BgB,OAAOC,SAASsC,aAKpBnC,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEArFAuB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAMrD,KAAK,WACjCgC,QAAQC,IACN,+GAMJb,EAAgBC,EAAOC,MCtC/BE\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\nconst SearchBox = ({searchfield, searchChange}) => {\\r\\n    return (\\r\\n        <div className='pa2'>\\r\\n        <input\\r\\n            className='pa3 ba b--green bg-lightest-blue'\\r\\n            type='search'\\r\\n            placeholder='search robots'\\r\\n            onChange={searchChange}\\r\\n        />\\r\\n        </div>\\r\\n    )\\r\\n};\\r\\n\\r\\nexport default SearchBox;\",\"import React from 'react';\\r\\n\\r\\nconst Scroll = (props) => {\\r\\n    return (\\r\\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\\r\\n            {props.children}\\r\\n        </div>\\r\\n    )\\r\\n};\\r\\n\\r\\nexport default Scroll;\",\"import React from 'react';\\r\\n\\r\\nconst Card = ({ name, email, id }) => {\\r\\n    return (\\r\\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\r\\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\\r\\n            <div>\\r\\n                <h2>{name}</h2>\\r\\n                <p>{email}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    )\\r\\n};\\r\\n\\r\\nexport default Card;\",\"import React from 'react';\\r\\nimport Card from './Card';\\r\\n\\r\\nconst CardList = ({robots}) => {\\r\\n    return (\\r\\n        <div>\\r\\n            {\\r\\n                robots.map((user, i) => {\\r\\n                    return (\\r\\n                        <Card\\r\\n                            key={i}\\r\\n                            id={robots[i].id}\\r\\n                            name={robots[i].name}\\r\\n                            email={robots[i].email}\\r\\n                        />\\r\\n                    )\\r\\n                })\\r\\n            };\\r\\n        </div>\\r\\n    )\\r\\n};\\r\\n\\r\\nexport default CardList;\",\"import React, {Component} from 'react';\\r\\n//import {robots} from './robots';\\r\\nimport SearchBox from '../components/SearchBox';\\r\\nimport Scroll from '../components/Scroll';\\r\\nimport CardList from \\\"../components/CardList\\\";\\r\\nimport '../containers/App.css';\\r\\n\\r\\nclass App extends Component {\\r\\n    constructor() {\\r\\n        super();\\r\\n        this.state = {\\r\\n            //robots: robots,\\r\\n            robots: [],\\r\\n            searchfield: ''\\r\\n        }\\r\\n    }\\r\\n\\r\\n    componentDidMount() {\\r\\n        fetch('https://jsonplaceholder.typicode.com/users')\\r\\n            .then(response=> response.json())\\r\\n            .then(users => this.setState({robots: users}));\\r\\n    }\\r\\n\\r\\n    onSearchChange = (event) => {\\r\\n        this.setState({searchfield: event.target.value});\\r\\n    };\\r\\n\\r\\n    render() {\\r\\n        const { robots, searchfield} = this.state;\\r\\n        const filteredRobots = robots.filter(robots =>{\\r\\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\\r\\n        });\\r\\n        return !robots.length ?\\r\\n            <h1>Loading</h1> :\\r\\n            (\\r\\n                <div className='tc'>\\r\\n                    <h1 className='f1'>RoboFriends</h1>\\r\\n                    <SearchBox searchChange={this.onSearchChange}/>\\r\\n                    <Scroll>\\r\\n                        <CardList robots={filteredRobots}/>\\r\\n                    </Scroll>\\r\\n                </div>\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\n\\nReactDOM.render(<App/>, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.register();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,n,t){},16:function(e,n,t){},20:function(e,n,t){\"use strict\";t.r(n);var o=t(0),a=t.n(o),r=t(2),i=t.n(r),c=(t(14),t(3)),l=t(4),s=t(6),u=t(5),h=t(7),d=function(e){e.searchfield;var n=e.searchChange;return a.a.createElement(\"div\",{className:\"pa2\"},a.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:n}))},f=function(e){return a.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"5px solid black\",height:\"500px\"}},e.children)},m=function(e){var n=e.name,t=e.email,o=e.id;return a.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},a.a.createElement(\"img\",{alt:\"robots\",src:\"https://robohash.org/\".concat(o,\"?size=200x200\")}),a.a.createElement(\"div\",null,a.a.createElement(\"h2\",null,n),a.a.createElement(\"p\",null,t)))},g=function(e){var n=e.robots;return a.a.createElement(\"div\",null,n.map(function(e,t){return a.a.createElement(m,{key:t,id:n[t].id,name:n[t].name,email:n[t].email})}),\";\")},v=(t(16),function(e){function n(){var e;return Object(c.a)(this,n),(e=Object(s.a)(this,Object(u.a)(n).call(this))).onSearchChange=function(n){e.setState({searchfield:n.target.value})},e.state={robots:[],searchfield:\"\"},e}return Object(h.a)(n,e),Object(l.a)(n,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(n){return e.setState({robots:n})})}},{key:\"render\",value:function(){var e=this.state,n=e.robots,t=e.searchfield,o=n.filter(function(e){return e.name.toLowerCase().includes(t.toLowerCase())});return n.length?a.a.createElement(\"div\",{className:\"tc\"},a.a.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),a.a.createElement(d,{searchChange:this.onSearchChange}),a.a.createElement(f,null,a.a.createElement(g,{robots:o}))):a.a.createElement(\"h1\",null,\"Loading\")}}]),n}(o.Component)),b=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function p(e,n){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;null!=t&&(t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.\"),n&&n.onUpdate&&n.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),n&&n.onSuccess&&n.onSuccess(e)))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}t(18);i.a.render(a.a.createElement(v,null),document.getElementById(\"root\")),function(e){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var n=\"\".concat(\"\",\"/service-worker.js\");b?(function(e,n){fetch(e).then(function(t){var o=t.headers.get(\"content-type\");404===t.status||null!=o&&-1===o.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):p(e,n)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(n,e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA\")})):p(n,e)})}}()},8:function(e,n,t){e.exports=t(20)}},[[8,2,1]]]);","extractedComments":[]}